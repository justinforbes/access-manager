<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AuditEmailSubjectFailure" xml:space="preserve">
    <value>Access to {computer.MsDsPrincipalName} was denied for {user.MsDsPrincipalName}</value>
  </data>
  <data name="AuditEmailSubjectSuccess" xml:space="preserve">
    <value>Access to {computer.MsDsPrincipalName} was granted for {user.MsDsPrincipalName}</value>
  </data>
  <data name="AuthenticatedAndMappedUser" xml:space="preserve">
    <value>Successfully authenticated and mapped directory user
{0}</value>
  </data>
  <data name="AuthNAccessDenied" xml:space="preserve">
    <value>The external authentication provider denied the logon request</value>
  </data>
  <data name="AuthNDirectoryLookupError" xml:space="preserve">
    <value>An error occurred looking up the claim value in the directory {0}:{1}</value>
  </data>
  <data name="AuthNProviderError" xml:space="preserve">
    <value>The authentication provider returned an error</value>
  </data>
  <data name="AuthNResponseProcessingError" xml:space="preserve">
    <value>There was an exception processing the response from the external identity provider</value>
  </data>
  <data name="AuthorizationFailed" xml:space="preserve">
    <value>The user {0} is not authorized to access the computer {1}.</value>
  </data>
  <data name="AuthZCodeFlowError" xml:space="preserve">
    <value>An error occurred during the authorization code flow</value>
  </data>
  <data name="AuthZError" xml:space="preserve">
    <value>An unexpected error occurred during the authorization process for user {0} requesting {2} access to computer {1}</value>
  </data>
  <data name="AuthZFailedAuditError" xml:space="preserve">
    <value>The user {0} requested {2} access to computer {1} which was authorized, but one or more audit notification channels failed to deliver the audit response, and were configured to deny access to the password when auditing fails</value>
  </data>
  <data name="AuthZFailedNoReaderPrincipalMatch" xml:space="preserve">
    <value>The user {0} requested access to computer {1} but does not match any of the reader principals that are allowed access to this computer</value>
  </data>
  <data name="AuthZResponseExplicitlyDenied" xml:space="preserve">
    <value>The user was explicitly denied access to the computer</value>
  </data>
  <data name="AuthZResponseFallback" xml:space="preserve">
    <value>Not authorized</value>
  </data>
  <data name="AuthZResponseIpRateLimitExceeded" xml:space="preserve">
    <value>The user exceeded the per-IP address request limit</value>
  </data>
  <data name="AuthZResponseNoMatchingRuleForComputer" xml:space="preserve">
    <value>There were no authorization rules that apply to the requested computer</value>
  </data>
  <data name="AuthZResponseNoMatchingRuleForUser" xml:space="preserve">
    <value>There are no authorization rules that grant the user access to the requested computer</value>
  </data>
  <data name="AuthZResponseUserRateLimitExceeded" xml:space="preserve">
    <value>The user exceeded the per-user request limit</value>
  </data>
  <data name="BitLockerKeyAccessError" xml:space="preserve">
    <value>An error occurred when trying to get the BitLocker recovery passwords for computer {0} as requested by user {1}</value>
  </data>
  <data name="BitLockerKeysNotPresent" xml:space="preserve">
    <value>User {1} requested access to the BitLocker recovery passwords for computer {0}, but the computer does not have any BitLocker recovery passwords in the directory</value>
  </data>
  <data name="CertificateAuthNGenericFailure" xml:space="preserve">
    <value>The certificate could not be validated due to an unexpected error

{0}</value>
  </data>
  <data name="CertificateAuthNValidationFailure" xml:space="preserve">
    <value>The certificate presented by the client could not be validated. Check for prior log messages for additional context. If there are no previous log messages related to this authentication attempt, then ensure the certificate was not self-signed, is issued by a certificate authority trusted by this computer, and contains the client authentication EKU

{0}</value>
  </data>
  <data name="ClaimNotFound" xml:space="preserve">
    <value>No user claim was found with the type {0}</value>
  </data>
  <data name="ComputerDiscoveryError" xml:space="preserve">
    <value>An unexpected error occurred while trying to find a computer named {0} in the directory for user {1} requesting {2} access.</value>
  </data>
  <data name="ComputerNameAmbiguous" xml:space="preserve">
    <value>The user {0} requested {2} access to computer {1}, but multiple computers matching that name were found in the directory</value>
  </data>
  <data name="ComputerNotFoundInDirectory" xml:space="preserve">
    <value>The user {0} requested {2} access to computer {1} which was not found in the directory</value>
  </data>
  <data name="DefaultAuditFailureText" xml:space="preserve">
    <value>AUDIT: FAILURE          
Username:			{user.MsDsPrincipalName}
Name:				{user.DisplayName}
UPN:				{user.UserPrincipalName}
SID:				{user.Sid}
User DN:				{user.DistinguishedName}
Computer name:			{computer.MsDsPrincipalName}
Computer DN:			{computer.DistinguishedName}
Target ID:			{target.ID}
Reader principal:			{reader.Principal}
Detail:				{message}</value>
  </data>
  <data name="DefaultAuditSuccessText" xml:space="preserve">
    <value>AUDIT: SUCCESS       
Username:			{user.MsDsPrincipalName}
Name:				{user.DisplayName}
UPN:				{user.UserPrincipalName}
SID:				{user.Sid}
User DN:				{user.DistinguishedName}
Computer name:			{computer.MsDsPrincipalName}
Computer DN:			{computer.DistinguishedName}
Target ID:			{target.ID}
Reader principal:			{reader.Principal}</value>
  </data>
  <data name="IdentityDiscoveryError" xml:space="preserve">
    <value>The request failed because the information about the authenticated user could not be found</value>
  </data>
  <data name="JitError" xml:space="preserve">
    <value>An error occurred when trying to grant JIT access to {0} for user {1}</value>
  </data>
  <data name="JitRollbackFailed" xml:space="preserve">
    <value>An error occurred when trying to rollback the JIT access for user {0} to computer {1}</value>
  </data>
  <data name="JitRollbackInProgress" xml:space="preserve">
    <value>Rolling back JIT access for user {0} to computer {1} due to an exception in the audit process</value>
  </data>
  <data name="LapsPasswordError" xml:space="preserve">
    <value>An error occurred when trying to get the password for computer {0} as requested by user {1}</value>
  </data>
  <data name="LapsPasswordHistoryError" xml:space="preserve">
    <value>An error occurred when trying to get the password history for computer {0} as requested by user {1}</value>
  </data>
  <data name="NoLapsPassword" xml:space="preserve">
    <value>The computer {0} requested by {1} did not have a local admin password in the directory</value>
  </data>
  <data name="NoLapsPasswordHistory" xml:space="preserve">
    <value>The computer {0} requested by {1} did not have any historical local admin passwords in the directory</value>
  </data>
  <data name="NotificationChannelError" xml:space="preserve">
    <value>The notification channel '{0}' failed to process the audit message</value>
  </data>
  <data name="PreAuthZError" xml:space="preserve">
    <value>An unexpected error occurred during the pre-authorization process for user {0} requesting {2} access to {1}</value>
  </data>
  <data name="RateLimitExceededIP" xml:space="preserve">
    <value>The user {0} on IP {1} has exceeded the maximum allowed number of requests per IP ({2} per {3} seconds). The user requested {4} access to {5}.</value>
  </data>
  <data name="RateLimitExceededUser" xml:space="preserve">
    <value>The user {0} on IP {1} has exceeded the maximum allowed number of requests per user ({2} per {3} seconds). The user requested {4} access to {5}.</value>
  </data>
  <data name="ReasonRequired" xml:space="preserve">
    <value>The user {0} did not fill out the mandatory request reason field for their {1} access request to {2}</value>
  </data>
  <data name="TargetRuleRequiresPasswordChange" xml:space="preserve">
    <value>Target rule requires password to change after {0}</value>
  </data>
  <data name="TooManyResults" xml:space="preserve">
    <value>The user {0} search for the computer {1} failed because the number of results exceeded the search result limit</value>
  </data>
  <data name="UnhandledError" xml:space="preserve">
    <value>An unhandled error occurred while processing the request for {0} access to computer {1} for user {2}</value>
  </data>
  <data name="UnknownComputerPlaceholder" xml:space="preserve">
    <value>unknown</value>
  </data>
  <data name="UserHasRequestedAccessToComputer" xml:space="preserve">
    <value>{0} has requested {2} access to computer {1}</value>
  </data>
  <data name="UserNotFoundInDirectory" xml:space="preserve">
    <value>The request could not be processed because the authenticated user was not found in the directory. Claim information:
{0}</value>
  </data>
</root>